buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
        maven { url "http://repo.winsigns-dev.com/artifactory/mavenCentral" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'discovery-service'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
    maven { url "http://repo.winsigns-dev.com/artifactory/mavenCentral" }
    maven { url "http://repo.winsigns-dev.com/artifactory/spring-snapshot" }
    maven { url "http://repo.winsigns-dev.com/artifactory/spring-milestone" }
}


dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-eureka-server')

	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-logging')
	compile('net.logstash.logback:logstash-logback-encoder:4.8')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task updateVersion << {
    def env = System.getenv()
    def buildNumber = env.BUILD_NUMBER?.toInteger()
    def buildType = env.BUILD_TYPE
    def workspace = env.WORKSPACE

    if (!workspace?.trim()){
        workspace = ".."
    }


    def version = String.format("%s%d", buildType, buildNumber)
    println "version= $version"
    
    def app_yml = String.format("%s/%s/src/main/resources/application.yml", workspace, jar.baseName)
    String contents = new File(app_yml).getText("UTF-8")
    println contents

    contents = contents.replaceAll('%%VERSION%%', version)
    new File(app_yml).write(contents, "UTF-8")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.BUILD-SNAPSHOT"
	}
}
